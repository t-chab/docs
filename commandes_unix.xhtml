<?xml version="1.0"
      encoding="utf-8"
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Guide de survie sous Unix</title>
<meta name="generator" content="http://txt2tags.org" />
</head>
<body bgcolor="white" text="black">
<div align="center">
<h1>Guide de survie sous Unix</h1>
<h2>&lt;tchabaud@sqli.com&gt;</h2>
<h3>Dernière mise à jour: Thu Sep 20 22:52:25 2012</h3>
</div>

<p></p>
<hr class="light" />
<p></p>

  <ol>
  <li><a href="#toc1">Commandes Unix</a>
  </li>
  <li><a href="#toc2">Shell</a>
    <ul>
    <li><a href="#toc3">2.1. Edition de la ligne de commande</a>
    </li>
    <li><a href="#toc4">2.2. echo</a>
    </li>
    </ul>
  </li>
  <li><a href="#toc5">Documentation</a>
    <ul>
    <li><a href="#toc6">3.1. man</a>
    </li>
    </ul>
  </li>
  <li><a href="#toc7">Gestion des fichiers</a>
    <ul>
    <li><a href="#toc8">4.1. cat</a>
    </li>
    <li><a href="#toc9">4.2. pwd</a>
    </li>
    <li><a href="#toc10">4.3. cd</a>
    </li>
    <li><a href="#toc11">4.4. ls</a>
    </li>
    <li><a href="#toc12">4.5. mv</a>
    </li>
    <li><a href="#toc13">4.6. cp</a>
    </li>
    <li><a href="#toc14">4.7. chmod</a>
    </li>
    <li><a href="#toc15">4.8. find</a>
    </li>
    <li><a href="#toc16">4.9. du</a>
    </li>
    <li><a href="#toc17">4.10. df</a>
    </li>
    </ul>
  </li>
  <li><a href="#toc18">Manipulation de fichiers textes</a>
    <ul>
    <li><a href="#toc19">5.1. head</a>
    </li>
    <li><a href="#toc20">5.2. tail</a>
    </li>
    <li><a href="#toc21">5.3. more</a>
    </li>
    <li><a href="#toc22">5.4. sort</a>
    </li>
    <li><a href="#toc23">5.5. uniq</a>
    </li>
    <li><a href="#toc24">5.6. grep</a>
    </li>
    <li><a href="#toc25">5.7. awk</a>
    </li>
    <li><a href="#toc26">5.8. vim</a>
      <ul>
      <li><a href="#toc27">5.8.1. Description</a>
      </li>
      <li><a href="#toc28">5.8.2. Commandes principales</a>
      </li>
      <li><a href="#toc29">5.8.3. Raccourcis claviers</a>
      </li>
      <li><a href="#toc30">5.8.4. Copier/coller</a>
      </li>
      </ul>
    </li>
    </ul>
  </li>
  <li><a href="#toc31">Notion de pipe</a>
  </li>
  <li><a href="#toc32">Remerciements</a>
  </li>
  <li><a href="#toc33">Bibliographie</a>
  </li>
  </ol>

<p></p>
<hr class="light" />
<p></p>

<a id="toc1" name="toc1"></a>
<h1>1. Commandes Unix</h1>

<hr class="heavy" />

<hr class="heavy" />

<a id="toc2" name="toc2"></a>
<h1>2. Shell</h1>

<p>
L'appellation <i>shell</i> désigne la plupart du temps dans le monde Unix un interpréteur de lignes de commandes. Pour des raisons de concision, cette documentation ne traite que du shell <i>bash</i>, qui est utilisé par défaut sur les distributions Linux et Mac OS X.
Les principaux raccourcis clavier du shell <i>bash</i> sont les suivants :
</p>

<a id="toc3" name="toc3"></a>
<h2>2.1. Edition de la ligne de commande</h2>

<p>
Complète la commande
</p>

<pre>
  Tab
</pre>

<p>
ou
</p>

<pre>
  Ctrl-i
</pre>

<p>
Déconnecte l'utilisateur (équivalent d'un <i>exit</i>)
</p>

<pre>
  Ctrl-d
</pre>

<p>
Efface l'écran (équivalent de la commande <i>clear</i>)
</p>

<pre>
  Ctrl-l
</pre>

<p>
Envoie le curseur en début de ligne
</p>

<pre>
  Ctrl-a
</pre>

<p>
Envoie le curseur en fin de ligne
</p>

<pre>
  Ctrl-e
</pre>

<p>
Commande précédente dans l'historique
</p>

<pre>
  Ctrl-p
</pre>

<p>
Commande suivante dans l'historique
</p>

<pre>
  Ctrl-n
</pre>

<p>
Rappelle la dernière commande commençant par <i>uneChaine</i>
</p>

<pre>
  !uneChaine
</pre>

<p>
Interrompt la commande en cours
</p>

<pre>
  Ctrl-c
</pre>

<p>
Met en pause le process courant (envoi d'un signal <b>SIGSTP</b>). Il faut utiliser la commande <i>fg</i> pour le reprendre.
</p>

<pre>
  Ctrl-z
</pre>

<a id="toc4" name="toc4"></a>
<h2>2.2. echo</h2>

<p>
La commande <i>echo</i> permet d'afficher une ligne de texte à l'écran.
</p>
<p>
<b><u>Exemple</u></b> :
Affiche <i>Ceci est une ligne de texte</i> sur l'écran
</p>

<pre>
  echo Ceci est une ligne de texte
</pre>

<p>
Affiche <i>test</i> suivi de 5 retours chariots sur l'écran. L'option <i>-e</i> est indispensable pour que les <i>\n</i> soient
interprétés comme des retour chariots.
</p>

<pre>
  echo -e "test\n\n\n\n\n"
</pre>

<a id="toc5" name="toc5"></a>
<h1>3. Documentation</h1>

<a id="toc6" name="toc6"></a>
<h2>3.1. man</h2>

<p>
La commande <i>man</i> permet d'afficher le manuel d'utilisation de la commande passé en argument.
</p>
<p>
<b><u>Exemple</u></b> :
    Affiche l'aide de la commande <i>ls</i>, avec le détail des options.
</p>

<pre>
  man ls
</pre>

<p>
    Convertit le manuel de la commande <i>bash</i> en fichier Postscript.
</p>

<pre>
  man -t bash &gt; bash.ps
</pre>

<p>
    Convertit le manuel de la commande <i>bash</i> en fichier PDF.
</p>

<pre>
  man -t bash | ps2pdf - &gt; bash.pdf
</pre>

<a id="toc7" name="toc7"></a>
<h1>4. Gestion des fichiers</h1>

<a id="toc8" name="toc8"></a>
<h2>4.1. cat</h2>

<p>
La commande <i>cat</i> permet de concaténer des fichiers, mais aussi d'envoyer le contenu d'un fichier sur la sortie
standard.
</p>
<p>
<b><u>Exemple</u></b> :
</p>
<p>
Afficher le contenu du fichier <i>document.txt</i>
</p>

<pre>
  cat document.txt
</pre>

<p>
Concatène les 3 fichiers <i>fic1</i>,<i>fic2</i> et <i>fic3</i> dans le fichier <i>fusion</i>
</p>

<pre>
  cat fic1 fic2 fic3 &gt; fusion
</pre>

<a id="toc9" name="toc9"></a>
<h2>4.2. pwd</h2>

<p>
La commande <i>pwd</i> affiche le répertoire courant.
</p>

<a id="toc10" name="toc10"></a>
<h2>4.3. cd</h2>

<p>
La commande <i>cd</i> permet de se déplacer dans le répertoire passé en argument.
Le caractère <i>-</i> permet de revenir au répertoire précédent. Le caractère <i>~</i> pointe vers le répertoire <i>home</i> de l'utilisateur courant.
</p>
<p>
<b><u>Exemple :</u></b> :
    Le répertoire courant devient <i>/usr</i> puis <i>/var</i> puis on revient ensuite dans le répertoire <i>/usr</i> avant de se déplacer dans le <i>home</i> de l'utilisateur.
</p>

<pre>
  cd /usr
</pre>

<pre>
  cd /var
</pre>

<pre>
  cd -
</pre>

<pre>
  cd ~
</pre>

<a id="toc11" name="toc11"></a>
<h2>4.4. ls</h2>

<p>
La commande <i>ls</i> permet de lister le contenu d'un répertoire.
</p>
<p>
<b><u>Exemple :</u></b>
    Liste tous les fichiers (<i>-a</i>, c'est à dire même les fichiers cachés) avec un affichage détaillé (<i>-l</i>) en les triant par date (<i>-t</i>) du plus ancien au plus récent (<i>-r</i>, inverse l'ordre de tri).
</p>

<pre>
  ls -alrt
</pre>

<p>
    Liste tous les fichiers du répertoire <i>/var</i> mais n'affiche pas <i>.</i> (alias pour le répertoire courant) ni <i>../</i> (alias pour le répertoire parent)    
</p>

<pre>
  ls -A /var
</pre>

<a id="toc12" name="toc12"></a>
<h2>4.5. mv</h2>

<p>
La commande <i>mv</i> permet de renommer des fichiers / répertoires.
</p>
<p>
<b><u>Exemple :</u></b>
    Renomme le fichier <i>http.conf</i> en <i>httpd.conf</i>
</p>

<pre>
  mv http.conf httpd.conf
</pre>

<a id="toc13" name="toc13"></a>
<h2>4.6. cp</h2>

<p>
La commande <i>cp</i> permet de copier des fichiers / répertoires.
</p>
<p>
<b><u>Exemple :</u></b>
    Copie le contenu de <i>ficsrc</i> dans un second fichier nommé <i>ficdest</i>
</p>

<pre>
  cp ficsrc ficdest
</pre>

<a id="toc14" name="toc14"></a>
<h2>4.7. chmod</h2>

<p>
La commande <i>chmod</i> permet de changer les droits sur un fichier. Pour le détail du fonctionnement des droits Unix
voir [<a href="http://fr.wikipedia.org/wiki/Permissions_Unix">http://fr.wikipedia.org/wiki/Permissions_Unix</a>].
<b><u>Exemple :</u></b>
Rend récursivement tous les fichiers du répertoire courant accessible en lecture/écriture par le propriétaire, et en lecture seule
pour le groupe et les autres utilisateurs.
</p>

<pre>
  chmod -R 644 *
</pre>

<p>
Rend exécutable le fichier <i>monScript.sh</i>. 
</p>

<pre>
  chmod +x monScript.sh
</pre>

<p>
Pour exécuter le fichier, se placer dans le répertoire parent et taper la commande suivante:
</p>

<pre>
  ./monScript.sh
</pre>

<a id="toc15" name="toc15"></a>
<h2>4.8. find</h2>

<p>
La commande <i>find</i> Permet de rechercher des fichiers dans l'arborescence du système de fichiers.
</p>
<p>
<b><u>Exemple :</u></b>
    Recherche dans le répertoire <i>/usr</i> et dans tous ses sous répertoires tous les fichiers (-type f) dont le nom commence par <i>foo</i>
</p>

<pre>
  find /usr -type f -name "foo*"
</pre>

<p>
    Recherche dans le répertoire <i>/home</i> (~) de l'utilisateur tous les élément qui se terminent par <i>.jpg</i> et
    exécute sur chaque élément trouvé la commande <i>convert &lt;fichier&gt;</i>
</p>

<pre>
  find ~ -name "*.jpg" -exec convert {} basename \{\} .png
</pre>

<a id="toc16" name="toc16"></a>
<h2>4.9. du</h2>

<p>
La commande <i>du</i> permet de connaitre l'espace occupé par un fichier ou un répertoire.
<b><u>Exemple :</u></b>
Affiche la taille totale du répertoire <i>/home</i>. L'option <i>-h</i> permet d'avoir une taile "human readable".
</p>

<pre>
  du -sh /home
</pre>

<a id="toc17" name="toc17"></a>
<h2>4.10. df</h2>

<p>
La commande <i>df</i> permet d'afficher l'espace disponible sur chacune des partitions du système.
<b><u>Exemple :</u></b>
Affiche l'espace occupé et libre sur chacune des partitions du système. L'option <i>-h</i> permet d'avoir une taile "human readable".
</p>

<pre>
  df -h
</pre>

<a id="toc18" name="toc18"></a>
<h1>5. Manipulation de fichiers textes</h1>

<a id="toc19" name="toc19"></a>
<h2>5.1. head</h2>

<p>
La commande <i>head</i> affiche par défaut les 10 premières lignes du fichier passé en argument. Il est possible de
préciser le nombre de lignes ou la taille en (kilo) octets que l'on souhaite afficher.
<b><u>Exemple :</u></b>
Affiche les 27 premières lignes du fichier document.txt
</p>

<pre>
  head -27 document.txt
</pre>

<p>
Affiche les 2 premiers ko du fichier document.txt
</p>

<pre>
  head -c 2K document.txt
</pre>

<a id="toc20" name="toc20"></a>
<h2>5.2. tail</h2>

<p>
La commande <i>tail</i> permet elle d'afficher la fin d'un fichier. L'option <i>-f</i> est particulièrement pratique, car elle
permet de scruter un fichier de log pour afficher immédiatement sur l'écran les mises à jour de ce fichier.
<b><u>Exemple :</u></b>
Affiche les 5 dernières lignes du fichier toto.txt
</p>

<pre>
  tail -5 toto.txt
</pre>

<p>
Scrute le fichier <i>/var/log/messages.log</i> pour observer les modifications en temps réel.
</p>

<pre>
  tail -f /var/log/messages.log
</pre>

<a id="toc21" name="toc21"></a>
<h2>5.3. more</h2>

<p>
La commande <i>more</i> permet d'afficher de façon paginée le contenu d'un long fichier texte. Pour passer à la page
suivante, il faut appuyer sur <i>espace</i>.
<b><u>Exemple :</u></b>
Affiche page par page le contenu du fichier <i>Xorg.0.log</i>
</p>

<pre>
  more /var/log/Xorg.0.log
</pre>

<p>
Affiche le fichier <i>monFichier.txt</i> en commençant à la ligne 53
</p>

<pre>
  more +53 monFichier.txt
</pre>

<a id="toc22" name="toc22"></a>
<h2>5.4. sort</h2>

<p>
La commande <i>sort</i> permet d'afficher le contenu concaténé et trié des fichiers passés en argument. Le tri est
alphabétique par défaut.
<b><u>Exemple :</u></b>
Affiche sur la sortie standard les 3 fichiers <i>list1</i>, <i>list2</i> et <i>list3</i> triés numériquement.
</p>

<pre>
  sort -n list1 list2 list3
</pre>

<p>
Trie comme dans l'exemple précédent en supprimant les doublons
</p>

<pre>
  sort -u -n list1 list2 list3
</pre>

<a id="toc23" name="toc23"></a>
<h2>5.5. uniq</h2>

<p>
Cette commande permet de compter ou de supprimer des lignes en doublons.
<b><u>Exemple :</u></b>
Affiche les lignes en doublons du fichier <i>list1</i>
</p>

<pre>
  uniq -d list1
</pre>

<p>
Affiche le nombre d'occurences de chaque ligne du fichier <i>liste.txt</i>. L'option -i permet d'ignorer la casse pour les
comparaisons (avec cette option , <i>aa</i>, <i>aA</i> et <i>AA</i> comptent pour 3 occurences de la même chaine).
</p>

<pre>
  uniq -i -c liste.txt
</pre>

<a id="toc24" name="toc24"></a>
<h2>5.6. grep</h2>

<p>
La commande <i>grep</i> permet d'effectuer des recherches de chaine de caractères dans des fichiers. La syntaxe est simple :
</p>

<pre>
  grep [chaine de recherche] [fichier ou répertoire]
</pre>

<p>
Les options les plus pratiques sont les suivantes :
</p>

<ul>
<li>-R : permet d'effectuer une recherche récursivement dans un répertoire
</li>
<li>-i : permet d'ignorer la casse
</li>
<li>-c : Supprime la sortie standard et affiche à la place le nombre de lignes correspondantes à la chaine de recherche dans chaque fichier en entrée.
</li>
<li>-A <i>N</i> : Affiche les <i>N</i> lignes  qui précédent chaque occurence de recherche.
</li>
<li>-B <i>N</i> : Idem que <i>-A</i> pour les lignes qui suivent chaque occurence de recherche.
</li>
<li>-C <i>N</i> : Affiche <i>N</i> lignes entourant l'occurence de recherche.
</li>
</ul>

<p>
Pour ces 3 dernières options, chaque groupe de lignes est séparé par la chaine <i>--</i>.
</p>

<a id="toc25" name="toc25"></a>
<h2>5.7. awk</h2>

<p>
La commande <i>awk</i> permet de nombreuses manipulations sur des fichiers textes. Un tutoriel est disponible ici
[<a href="http://nyal.developpez.com/tutoriel/gawk/index.php">http://nyal.developpez.com/tutoriel/gawk/index.php</a>]. Elle est très pratique pour réordonner les colonnes d'un fichier texte, ou le filtrer en n'affichant que certaines
colonnes. Les colonnes sont référencées par <i>$&lt;index&gt;</i>. Par exemple la colonne 3 est référencée par <i>$3</i>. <i>$0</i>
référence l'ensemble des colonnes d'une ligne. Le séparateur de champs par défaut est le caractère espace.
</p>
<p>
<b><u>Syntaxe "one-line" :</u></b>
</p>

<pre>
  awk -F "&lt;séparateur&gt;" '{ suite de commandes [...] }'
</pre>

<p>
<b><u>Exemple</u></b> :
    Affiche la 4e et la 8e colonne du fichier <i>foo.csv</i> ayant comme séparateur de champ le caractère <i>;</i>
    Les 2 colonnes sont séparées par le caractère espace.
</p>

<pre>
  awk -F ";" '{ print $4 " " $8}' foo.csv
</pre>

<p>
    Affiche le fichier system.log sans les 3 premières colonnes.
</p>

<pre>
  awk '{ print $1=$2=$3=""; print $0}' system.log
</pre>

<a id="toc26" name="toc26"></a>
<h2>5.8. vim</h2>

<a id="toc27" name="toc27"></a>
<h3>5.8.1. Description</h3>

<p>
Vim est un éditeur de texte descendant de vi, et qui dispose de plusieurs modes d'éditions. Les plus utilisés sont le mode commande et le mode insertion.
</p>
<p>
Vim démarre en mode commande, qui permet notamment de sauvegarder, d'effectuer des recherches, copier du texte, etc ...
</p>
<p>
Pour passer du mode commande au mode édition, il faut utiliser la touche <b>i</b>.
La touche <b>Echap</b> permet de retourner au mode commande depuis le mode édition.
Pour saisir une commande dans le mode éponyme, il faut utiliser la syntaxe <i>:&lt;commande&gt;</i>
</p>

<a id="toc28" name="toc28"></a>
<h3>5.8.2. Commandes principales</h3>

<p>
Pour sauvegarder
</p>

<pre>
  :w
</pre>

<p>
Pour quitter
</p>

<pre>
  :q
</pre>

<p>
Pour sauvegarder et quitter
</p>

<pre>
  :wq
</pre>

<p>
Pour chercher la chaine "toto" dans le fichier courant
</p>

<pre>
  :/toto
</pre>

<p>
Envoie le curseur en fin de fichier
</p>

<pre>
  :$
</pre>

<p>
Positionne le curseur sur la ligne 15 du fichier courant
</p>

<pre>
  :15
</pre>

<p>
Utilise des fins de ligne Unix (\n) pour le fichier courant. Pour utiliser des fins de lignes DOS (\r\n), remplacer <i>unix</i> par
<i>dos</i>
</p>

<pre>
  :set ff=unix
</pre>

<p>
Supprime la ligne courante
</p>

<pre>
  :dd
</pre>

<p>
Efface 20 lignes à partir du curseur
</p>

<pre>
  :d20
</pre>

<p>
Active la coloration syntaxique (<i>off</i> pour désactiver).
</p>

<pre>
  :set syntax on
</pre>

<p>
Active un jeu de couleur (pour la coloration syntaxique) plus lisible pour les terminaux à fond sombre.
</p>

<pre>
  :set background=dark
</pre>

<p>
Affiche les numéros de lignes. <i>nonumber</i> pour les masquer.
</p>

<pre>
  :set number
</pre>

<a id="toc29" name="toc29"></a>
<h3>5.8.3. Raccourcis claviers</h3>

<p>
Raccourcis clavier du mode commande :
</p>

<ul>
<li><i>x</i> : Supprime le caractère sous le curseur.
</li>
<li><i>j</i> : Déplace le curseur sur la ligne du dessous.
</li>
<li><i>k</i> : Déplace le curseur sur la ligne du dessus.
</li>
<li><i>h</i> : Déplace le curseur d'un caractère vers la gauche.
</li>
<li><i>l</i> : Déplace le curseur d'un caractère vers la droite.
</li>
<li><i>A</i> : Envoie le curseur a la fin de la ligne courante et bascule en mode insertion.
</li>
<li><i>u</i> : Undo. Annule la dernière commande. <i>u&lt;N&gt;</i> Permet d'annuler les <i>&lt;N&gt;</i> dernières commandes.
</li>
<li><i>Ctrl-R</i> : Redo. Permet de refaire le dernier changement défait.
</li>
</ul>

<a id="toc30" name="toc30"></a>
<h3>5.8.4. Copier/coller</h3>

<ul>
<li>Positionner le curseur au début de la zone à copier ou couper.
</li>
<li>Appuyer sur <i>v</i> pour débuter la sélection.
</li>
<li>Déplacer le curseur à la fin de la zone à copier ou couper.
</li>
<li>Appuyer sur <i>d</i> (delete) pour couper ou sur <i>y</i> (yank) pour copier.
</li>
<li>Déplacer le curseur vers la zone cible de la copie ou du déplacement.
</li>
<li>Appuyer sur <i>p</i> pour coller après le curseur ou <i>P</i> pour coller avant le curseur.
</li>
</ul>

<a id="toc31" name="toc31"></a>
<h1>6. Notion de pipe</h1>

<p>
Le pipe (caractère |) permet de brancher la sortie d'une commande sur l'entrée d'une autre, afin d'enchainer des traitements, par exemple de filtrer un fichier texte :
</p>
<p>
<b><u>Exemple :</u></b>
Recherche la chaine <i>2012/08/01</i> dans le fichier access.log. La sortie du grep est ensuite branchée sur la commande
awk qui va afficher les colonnes 15 et 1 de la sortie, séparée par un espace. Pour finir on se branche sur la commande
<i>sort</i> qui va trier le tout par ordre décroissant (option <i>r</i>) en effectuant un tri numérique (option <i>n</i>).
</p>

<pre>
  grep "2012/08/01" access.log | awk '{ print $15 " " $1}' |sort -rn
</pre>

<hr class="heavy" />

<a id="toc32" name="toc32"></a>
<h1>7. Remerciements</h1>

<p>
Merci à N. Boussedra, D. Guérin, L. Courvoisier et G. Euzet pour leurs suggestions, et à F. Meaude pour la relecture.
</p>

<hr class="heavy" />

<a id="toc33" name="toc33"></a>
<h1>8. Bibliographie</h1>

<ul>
<li>[<a href="http://fr.wikipedia.org/wiki/Vim">http://fr.wikipedia.org/wiki/Vim</a>]
</li>
<li>[<a href="http://fr.wikipedia.org/wiki/Bourne-Again_shell">http://fr.wikipedia.org/wiki/Bourne-Again_shell</a>]
</li>
<li>[<a href="http://www.cyberciti.biz/tips/linux-unix-commands-cheat-sheets.html">http://www.cyberciti.biz/tips/linux-unix-commands-cheat-sheets.html</a>]
<p></p>
</li>
</ul>

<!-- xhtml code generated by txt2tags 2.6 (http://txt2tags.org) -->
<!-- cmdline: txt2tags commandes_unix.t2t -->
</body></html>
