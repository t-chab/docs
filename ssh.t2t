Présentation du protocole SSH et des outils associés
<tchabaud@sqli.com>
Dernière mise à jour: %%mtime(%c)

%! Target : xhtml
%! Encoding: utf-8
%! Options : --toc --enum-title
%!preproc: URLXMING     http://sourceforge.net/projects/xming/
%!preproc: URLOPENSSH	http://openssh.org
%!preproc: URLPUTTY		http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html

= SSH =
====================

%%TOC.

====================

+ Préambule +

SSH (//S//ecure //SH//ell) désigne simultanément un programme et un protocole de communication sécurisé. Le protocole de communication impose un échange de clefs en début de communication afin de chiffrer l'intégralité des échanges.
Ce document décrit l'utilisation des outils suivants, disponibles pour certains sous Linux (et les différents Unix), pour d'autres sous Windows :
- OpenSSH [URLOPENSSH] est une suite logicielle disponible sous la plupart des Unix qui permet de remplacer de façon sécurisée les anciens outils unix que sont telnet, rsh, rlogin ou ftp.
- Putty [URLPUTTY] est le programme windows permettant de se connecter à des serveurs SSH distants.
- Xming [URLXMING] est un serveur X Window opensource pour Microsoft Windows 

+ La commande SSH +

La commande //ssh// a deux utilisations principales qui sont la connexion a un serveur distant pour obtenir un shell, et la création de tunnels pour accèder ou rediriger des ports tcp.

++ Connexion en utilisant la commande //ssh//

Pour se connecter, il suffit de taper la commande suivante :
``` ssh username@host

Les options les plus courantes sont les suivantes :
- Utilisation d'un autre port que le port par défaut
``` ssh -p 2222 username@host
- Compression de toutes les données envoyée à l'aide de l'algorithme utilisé par //gzip//. A utiliser sur des connexions lentes pour du tunneling (voir plus bas)
``` ssh -C username@host
- Modification d'une option depuis la ligne de commande 
``` ssh -o //nomOption//=//valeur// username@host

++ Connexion en utilisant //putty//
++ Tunneling de ports avec //ssh//
++ Tunneling avec //putty//
++ Déport d'affichage sous Linux
++ Déport d'affichage sous Windows